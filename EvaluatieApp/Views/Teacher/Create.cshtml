@model EvaluatieApp.Models.Item

@{
    ViewBag.Title = "Create";
}

<script src="~/Themes/ckeditor/ckeditor.js"></script>
<script type="text/javascript">
    $(function () {
        alert(@ViewBag.ItemType);
    });
</script>
<h2>Create</h2>


@using (Html.BeginForm())
{
     List<SelectListItem> options = new List<SelectListItem>() { new SelectListItem() { Text = "Idee", Value = "Idee" }, new SelectListItem() { Text = "Actie", Value = "Actie" } }; 
<div class="form-horizontal">
    <h4>Item</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Title, options , new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { @id = "FullDescription", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            <script>

                CKEDITOR.replace("FullDescription");
            </script>
        </div>
    </div>
    @Html.HiddenFor(model => model.Type, new { @Value = ViewBag.ItemType });
    @Html.HiddenFor(model => model.CreatedOn, new { @Value = ViewBag.Date });




    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
